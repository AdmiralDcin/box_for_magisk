#!/system/bin/sh

export PATH="/data/adb/magisk:/data/adb/ksu/bin:$PATH:/system/bin"

# define the settings and paths
settings="/data/adb/box/settings.ini"

# set the port numbers for tproxy and redir
tproxy_port="9898"
redir_port="9797"

# enable/disable port detection: true / false
port_detect="false"

# enable/disable IPv6: true / false
ipv6="false"

# list of available kernel binaries
bin_list=( "clash" "sing-box" "xray" "v2fly" )

# select the client to use : clash / sing-box / xray / v2fly
bin_name="clash"

# This script is used to set the user and group for the BFM core files.
# If you want to change the user or group, make sure the BFM core files are located in the /system/bin directory, otherwise the changes will not take effect.
# If you are using Magisk, you can copy the BFM core files (sing-box, clash, etc.) to /data/adb/modules/box_for_root/system/bin/ and reboot the phone.
box_user_group="root:net_admin"

# redirect: tcp only,
# tproxy: for tcp + udp with tproxy,
# mixed: mode with redirect[tcp] + tun[udp]
network_mode="tproxy"

# blacklist / whitelist / tun (only tun auto-route)
proxy_mode="blacklist"

# List of package names to be proxied
packages_list=()

# Display AP info by typing "ifconfig" in terminal
ap_list=( "ap+" "wlan+" "rndis+" )
# Ignore AP in the out list
ignore_out_list=()

# Update subscription & geox
# Set update interval using cron, for more information: https://crontab.guru/
# set 'true' to enable Cron job
interva_update="0 0 * * *" # every 12 p.m
crontab_sec="false"

# Type "su -c /data/adb/box/scripts/box.tool geox" to update geox
auto_update_geox="true"

# Type "su -c /data/adb/box/scripts/box.tool subs" to update subscription / Only update clash subscription URL
auto_update_subscription="true"
subscription_url="http://fool.azurewebsites.net/get?limit=3&format=clash&cc=SG&cdn=104.18.3.198&network=ws&arg=tfo,xudp,key:value&mode=cdn&pass=t.me/foolvpn_bot"

# Set cgroup to limit memory usage
cgroup_memory="false"
cgroup_memory_limit="50M"
cgroup_memory_path=""

# Set box directory variables
data_dir="/data/adb/box"
run_path="${data_dir}/run"
logs_file="${run_path}/runs.log"
pid_file="${run_path}/box.pid"
bin_kernel="${data_dir}/bin"
bin_path="${bin_kernel}/${bin_name}"
scripts_dir="${data_dir}/scripts"
system_packages_file="/data/system/packages.list"
uid_list=("/data/adb/box/run/appuid.list")

# clash configuration
name_clash_config="config.yaml"
clash_config="${data_dir}/clash/${name_clash_config}"
# provide
name_provide_config="domestic.yml"
clash_provide_config="${data_dir}/clash/provide/${name_provide_config}"

log() {
    # Take the current time
    now=$(date +"%R")
    # Selects the text color according to the parameters
    case $1 in
        info) color="\033[1;34m" ;;
        error) color="\033[1;31m" ;;
        warn) color="\033[1;33m" ;;
        *) color="\033[1;32m" ;;
    esac
    # Add messages to time and parameters
    message="${now} [$1]: $2"
    if [ -t 1 ]; then
        # Mencetak pesan ke konsol
        echo -e "${color}${message}\033[0m"
    else
        # Print messages to a log file
        echo "${message}" >> ${logs_file} 2>&1 
    fi
}

# open yacd on start
display_yacd_on_start="false"
open_yacd () {
  if [ "${bin_name}" = "clash" -o "${bin_name}" = "sing-box" ] && [ "${display_yacd_on_start}" = "true" ]; then
    ip_port=$(if [ "${bin_name}" = "clash" ]; then busybox awk '/external-controller:/ {print $2}' "${clash_config}"; else find /data/adb/box/sing-box/ -type f -name "*.json" -exec busybox awk -F':' '/experimental/,/\}/' {} \; | sed -n 's/.*"external_controller": "\(.*\)",/\1/p'; fi;)
    if [ -t 1 ]; then
     # "cmd: Failure calling service activity: Failed transaction" if run through Magisk/KernelSu Manager,
     # this is normal if run in terminal/termux
      am start -a android.intent.action.VIEW -d "http://${ip_port}/ui"
    fi
  fi
}